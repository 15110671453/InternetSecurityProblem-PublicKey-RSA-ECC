RSA公钥加密算法

RSA加密算法是现在世界上运用最广泛的非对称加密算法，比如常用的https协议、银行交易等等。因为最近要使用到RSA加密算法加密数据，因此做了一些研究。


RSA算法基于一个十分简单的数论事实：将两个大质数相乘十分容易，但是想要对其乘积进行因式分解却极其困难，因此可以将乘积公开作为加密密钥。


RSA算法是一种非对称密码算法，所谓非对称，就是指该算法需要一对密钥，使用其中一个加密，则需要用另一个才能解密。
RSA的算法涉及三个参数，n、e1、e2。
其中，n是两个大质数p、q的积，n的二进制表示时所占用的位数，就是所谓的密钥长度。
e1和e2是一对相关的值，e1可以任意取，但要求e1与(p-1)*(q-1)互质；再选择e2，要求(e2×e1)≡1(mod(p-1)×(q-1))。
（n，e1),(n，e2)就是密钥对。其中(n，e1)为公钥，(n，e2)为私钥。
RSA加解密的算法完全相同，设A为明文，B为密文，则：A≡B^e2( mod n)；B≡A^e1 (mod n)；（公钥加密体制中，一般用公钥加密，私钥解密）
e1和e2可以互换使用，即：
A≡B^e1 (mod n)；B≡A^e2( mod n);

理论上  穷举 一个 大数 内的 素数 很难

找到 两个  很大  的  素数  更难 

然后将 两个大素数 乘积 作为 公钥  分解大整数  更难 


RSA 通信 交互中




